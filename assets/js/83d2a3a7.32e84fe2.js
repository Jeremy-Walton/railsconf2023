"use strict";(self.webpackChunkrailsconf_2023=self.webpackChunkrailsconf_2023||[]).push([[952],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>y});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,y=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(y,l(l({ref:t},c),{},{components:a})):n.createElement(y,l({ref:t},c))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5408:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);const r={card:"card_vceO",image:"image_EDOu",description:"description_Vdg7",position:"position_CmtU"};function i(e){let{imageUrl:t,name:a,position:i}=e;return n.createElement("div",{className:r.card},n.createElement("img",{src:t,className:r.image}),n.createElement("div",{className:r.description},n.createElement("p",null,a),n.createElement("p",{className:r.position},i)))}},6555:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),i=a(5408);const l={sidebar_position:7},o="Teaching Capybara Testing - An Illustrated Adventure",s={unversionedId:"day-two/capybara",id:"day-two/capybara",title:"Teaching Capybara Testing - An Illustrated Adventure",description:"100%! Red the lemur was so excited to have 100% test coverage, finally, after unit testing all of his Ruby code. With that, he was done, the code was tested, and he could call it a day.",source:"@site/docs/day-two/capybara.mdx",sourceDirName:"day-two",slug:"/day-two/capybara",permalink:"/railsconf2023/docs/day-two/capybara",draft:!1,editUrl:"https://github.com/Jeremy-Walton/railsconf2023/tree/main/docs/day-two/capybara.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"talksSidebar",previous:{title:"Building a more effective, bidirectional mentor-mentee relationship",permalink:"/railsconf2023/docs/day-two/mentoring"},next:{title:"A custom design pattern for building dynamic ActiveRecord queries",permalink:"/railsconf2023/docs/day-two/queries"}},p={},c=[{value:"Attendees",id:"attendees",level:2},{value:"Notes",id:"notes",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"teaching-capybara-testing---an-illustrated-adventure"},"Teaching Capybara Testing - An Illustrated Adventure"),(0,r.kt)("p",null,"100%! Red the lemur was so excited to have 100% test coverage, finally, after unit testing all of his Ruby code. With that, he was done, the code was tested, and he could call it a day."),(0,r.kt)(i.Z,{name:"Brandon Weaver",position:"Principal Software Engineer at Gusto",imageUrl:"https://sessionize.com/image/be1f-400o400o2-SzF1P9Ved83qeNB4WR28Vs.jpeg",mdxType:"Speaker"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://railsconf2023.sessionize.com/session/447749"},"Schedule Entry")),(0,r.kt)("h2",{id:"attendees"},"Attendees"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Kyle"),(0,r.kt)("li",{parentName:"ul"},"Reed")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Relevancy"),(0,r.kt)("th",{parentName:"tr",align:null},"Interesting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9"),(0,r.kt)("td",{parentName:"tr",align:null},"6")))),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Types of testing",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Unit, Integration, End-to-End (E2E)"),(0,r.kt)("li",{parentName:"ul"},"Unit - too tight, focused, too many stubs"),(0,r.kt)("li",{parentName:"ul"},"Integration - controllers with requests, models with db"),(0,r.kt)("li",{parentName:"ul"},"E2E - describe how application works from perspective of the user",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Possibly most important to the user"),(0,r.kt)("li",{parentName:"ul"},"Expensive, brittle"))))),(0,r.kt)("li",{parentName:"ul"},"First E2E test",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Runs in RSpec"),(0,r.kt)("li",{parentName:"ul"},"Config in spec_helper"),(0,r.kt)("li",{parentName:"ul"},"Can use ",(0,r.kt)("inlineCode",{parentName:"li"},"binding.irb")," to step through a test in headed mode (visible browser window)"),(0,r.kt)("li",{parentName:"ul"},"Email form input has an id called \u201clogin\u201d so it doesn't work"),(0,r.kt)("li",{parentName:"ul"},"Screen-reader gets confused"),(0,r.kt)("li",{parentName:"ul"},"Accessible code is testable code"),(0,r.kt)("li",{parentName:"ul"},"REPL-driven development is helpful for things that are already built"),(0,r.kt)("li",{parentName:"ul"},"After writing spec, take out binding and run entire test"))),(0,r.kt)("li",{parentName:"ul"},"Into the Flow",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Test helper, factory"),(0,r.kt)("li",{parentName:"ul"},"Email shows up in header and main HTML elements"),(0,r.kt)("li",{parentName:"ul"},"Query like a person, not like a machine"))),(0,r.kt)("li",{parentName:"ul"},"On Brittleness",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A good capybara test won't break on a page change"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://testing-library.com/docs/queries/about/#priority"},"https://testing-library.com/docs/queries/about/#priority")),(0,r.kt)("li",{parentName:"ul"},"Accessible to everyone:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"By role - have_button, have_link"),(0,r.kt)("li",{parentName:"ul"},"By label - fill_in"),(0,r.kt)("li",{parentName:"ul"},"By placeholder - find_field"),(0,r.kt)("li",{parentName:"ul"},"By text - have_text"),(0,r.kt)("li",{parentName:"ul"},"By display value - find, have_css"))),(0,r.kt)("li",{parentName:"ul"},"Semantic Queries",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"By Alt Text - find img","[alt=...]",", have_css"),(0,r.kt)("li",{parentName:"ul"},"By Title find role[title=...}"))),(0,r.kt)("li",{parentName:"ul"},"Test IDs",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Recommended to use only when everything else fails"),(0,r.kt)("li",{parentName:"ul"},"Css class used specifically for testing")))))))}m.isMDXComponent=!0}}]);