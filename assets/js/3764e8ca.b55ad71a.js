"use strict";(self.webpackChunkrailsconf_2023=self.webpackChunkrailsconf_2023||[]).push([[612],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return a?r.createElement(k,l(l({ref:t},c),{},{components:a})):r.createElement(k,l({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5408:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294);const n={card:"card_vceO",image:"image_EDOu",description:"description_Vdg7",position:"position_CmtU"};function i(e){let{imageUrl:t,name:a,position:i}=e;return r.createElement("div",{className:n.card},r.createElement("img",{src:t,className:n.image}),r.createElement("div",{className:n.description},r.createElement("p",null,a),r.createElement("p",{className:n.position},i)))}},9983:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294);const n={video:"video_lqCn"};function i(e){let{src:t}=e;return r.createElement("iframe",{className:n.video,width:"100%",height:"auto",src:t,title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowFullScreen:!0})}},3658:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>k,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var r=a(7462),n=(a(7294),a(3905)),i=a(5408),l=a(9983);const o={sidebar_position:9},s="Rails as a piece of birthday cake",p={unversionedId:"day-one/cake",id:"day-one/cake",title:"Rails as a piece of birthday cake",description:"Ruby on Rails as a framework follows the Model-View-Controller design pattern.",source:"@site/docs/day-one/cake.mdx",sourceDirName:"day-one",slug:"/day-one/cake",permalink:"/railsconf2023/docs/day-one/cake",draft:!1,editUrl:"https://github.com/Jeremy-Walton/railsconf2023/tree/main/docs/day-one/cake.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"talksSidebar",previous:{title:"Merged PRs: An Untapped Resource for Practice and Exploration",permalink:"/railsconf2023/docs/day-one/merged"},next:{title:"How to Have The Slowest Rails App Ever",permalink:"/railsconf2023/docs/day-one/slow"}},c={},u=[{value:"Attendees",id:"attendees",level:2},{value:"Notes",id:"notes",level:2}],m={toc:u},d="wrapper";function k(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"rails-as-a-piece-of-birthday-cake"},"Rails as a piece of birthday cake"),(0,n.kt)("p",null,"Ruby on Rails as a framework follows the Model-View-Controller design pattern."),(0,n.kt)(i.Z,{name:"Vladimir Dementyev",position:"Principal Engineer at Evil Martians",imageUrl:"https://sessionize.com/image/a7a5-400o400o2-hGDDmXdVCnGBNH5GorY6Zp.jpg",mdxType:"Speaker"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://railsconf2023.sessionize.com/session/452834"},"Schedule Entry")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://speakerdeck.com/palkan/railsconf-2023-rails-as-a-piece-of-cake"},"Slides")),(0,n.kt)(l.Z,{src:"https://www.youtube.com/embed/fANjY7Hn_ig",mdxType:"Video"}),(0,n.kt)("h2",{id:"attendees"},"Attendees"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Reed"),(0,n.kt)("li",{parentName:"ul"},"Jeremy"),(0,n.kt)("li",{parentName:"ul"},"Josh")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Relevancy"),(0,n.kt)("th",{parentName:"tr",align:null},"Interesting"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"9, 9, 9"),(0,n.kt)("td",{parentName:"tr",align:null},"8, 9, 9")))),(0,n.kt)("h2",{id:"notes"},"Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"MVC review",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Model = state / logic"),(0,n.kt)("li",{parentName:"ul"},"View = user interface"),(0,n.kt)("li",{parentName:"ul"},"Controller = translating user input to model updates"))),(0,n.kt)("li",{parentName:"ul"},"Model -> view ?"),(0,n.kt)("li",{parentName:"ul"},"Model -> ui?"),(0,n.kt)("li",{parentName:"ul"},"MVC cake",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"3 layers ok for small"),(0,n.kt)("li",{parentName:"ul"},"Not ok for big"),(0,n.kt)("li",{parentName:"ul"},"New layers needed for bigger cake. Scale the # layers"))),(0,n.kt)("li",{parentName:"ul"},"Beyond MVC cake",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"More sophisticated but sufficient architecture"))),(0,n.kt)("li",{parentName:"ul"},"Vladamir",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Check out \u201cRails Changelog\u201d podcast"))),(0,n.kt)("li",{parentName:"ul"},"Rails Way is to build Web application = serves http requests with responses"),(0,n.kt)("li",{parentName:"ul"},"To increase code maintainability",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Complexity"),(0,n.kt)("li",{parentName:"ul"},"Testability"))),(0,n.kt)("li",{parentName:"ul"},"How to add new abstraction layer without adding complexity?",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Good abstractions decreases complexity"),(0,n.kt)("li",{parentName:"ul"},"Bad abstractions increases complexity"),(0,n.kt)("li",{parentName:"ul"},"Think of tetris pieces fitting together"))),(0,n.kt)("li",{parentName:"ul"},"Good abstractions",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Conventions - try to make your convention non-orthogonal to Rails conventions. Make it look like it * belongs to rails. (principle of least surprise)"),(0,n.kt)("li",{parentName:"ul"},"Loose coupling"),(0,n.kt)("li",{parentName:"ul"},"Encapsulation"),(0,n.kt)("li",{parentName:"ul"},"Single Responsibility (or a few related ones)"),(0,n.kt)("li",{parentName:"ul"},"Simplification"),(0,n.kt)("li",{parentName:"ul"},"Generalization"),(0,n.kt)("li",{parentName:"ul"},"Centralization"),(0,n.kt)("li",{parentName:"ul"},"Reusability"))),(0,n.kt)("li",{parentName:"ul"},"Recipe step 1: Rails conventions. Learn how Rails works, re-use Rails building blocks & patterns."),(0,n.kt)("li",{parentName:"ul"},"Layered Architectures - layers only depend on those below it. Sometimes can depend upon layers much deeper than next one.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Presentation",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Controllers"),(0,n.kt)("li",{parentName:"ul"},"Views"),(0,n.kt)("li",{parentName:"ul"},"Channels"))),(0,n.kt)("li",{parentName:"ul"},"Application",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Jobs"),(0,n.kt)("li",{parentName:"ul"},"Mailers"))),(0,n.kt)("li",{parentName:"ul"},"Domain",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Models"))),(0,n.kt)("li",{parentName:"ul"},"Infrastructure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"DB adapters"),(0,n.kt)("li",{parentName:"ul"},"Rails secret key base"))))),(0,n.kt)("li",{parentName:"ul"},"Object belongs to highest arch layer among all its inputs"),(0,n.kt)("li",{parentName:"ul"},"Recipe step 2: Layered architecture ideas"),(0,n.kt)("li",{parentName:"ul"},"How to choose new abstractions? => How to extract abstractions?"),(0,n.kt)("li",{parentName:"ul"},"Recipe step 3: codebase extracts, no artificial concepts. Perform complexity analysis, analyze and extract abstractions."),(0,n.kt)("li",{parentName:"ul"},"Service objects are pseudo abstraction layer",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"app/services - bag of random objects"),(0,n.kt)("li",{parentName:"ul"},"No generalization"),(0,n.kt)("li",{parentName:"ul"},"No consistency"),(0,n.kt)("li",{parentName:"ul"},"Intermediate stage until the final abstraction emerges"),(0,n.kt)("li",{parentName:"ul"},"Like a waiting room until next abstraction emerges/arrives"),(0,n.kt)("li",{parentName:"ul"},"Good generalization requires some aging"))),(0,n.kt)("li",{parentName:"ul"},"Form Objects",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For processing form submissions"),(0,n.kt)("li",{parentName:"ul"},"Making Rails abstraction via type casting, validations"),(0,n.kt)("li",{parentName:"ul"},"Trigger side actions on successful submission"),(0,n.kt)("li",{parentName:"ul"},"Can make it work as a model in views/forms!")))))}k.isMDXComponent=!0}}]);