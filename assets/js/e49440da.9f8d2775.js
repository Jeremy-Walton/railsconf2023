"use strict";(self.webpackChunkrailsconf_2023=self.webpackChunkrailsconf_2023||[]).push([[22],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>h});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(o),d=a,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return o?n.createElement(h,i(i({ref:t},p),{},{components:o})):n.createElement(h,i({ref:t},p))}));function h(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},5408:(e,t,o)=>{o.d(t,{Z:()=>r});var n=o(7294);const a={card:"card_vceO",image:"image_EDOu",description:"description_Vdg7",position:"position_CmtU"};function r(e){let{imageUrl:t,name:o,position:r}=e;return n.createElement("div",{className:a.card},n.createElement("img",{src:t,className:a.image}),n.createElement("div",{className:a.description},n.createElement("p",null,o),n.createElement("p",{className:a.position},r)))}},2888:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=o(7462),a=(o(7294),o(3905)),r=o(5408);const i={sidebar_position:4},l="Catch Me If You Can: Learning to Process Webhooks in Your Rails App",s={unversionedId:"day-two/webhooks",id:"day-two/webhooks",title:"Catch Me If You Can: Learning to Process Webhooks in Your Rails App",description:"In this workshop, you\u2019ll learn how to catch and process webhooks like a pro.",source:"@site/docs/day-two/webhooks.mdx",sourceDirName:"day-two",slug:"/day-two/webhooks",permalink:"/railsconf2023/docs/day-two/webhooks",draft:!1,editUrl:"https://github.com/Jeremy-Walton/railsconf2023/tree/main/docs/day-two/webhooks.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"talksSidebar",previous:{title:"Exploring the Power of Turbo Streams and ActionCable",permalink:"/railsconf2023/docs/day-two/turbo-streams-action-cable"},next:{title:"A Brewer's Guide to Filtering out Complexity and Churn",permalink:"/railsconf2023/docs/day-two/complexity"}},c={},p=[{value:"Attendees",id:"attendees",level:2},{value:"Notes",id:"notes",level:2},{value:"Why Webhooks?",id:"why-webhooks",level:3},{value:"GitHub Repo",id:"github-repo",level:3},{value:"Security",id:"security",level:3}],u={toc:p},m="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(m,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"catch-me-if-you-can-learning-to-process-webhooks-in-your-rails-app"},"Catch Me If You Can: Learning to Process Webhooks in Your Rails App"),(0,a.kt)("p",null,"In this workshop, you\u2019ll learn how to catch and process webhooks like a pro."),(0,a.kt)(r.Z,{name:"Colin Loretz",position:"Senior Software Engineer at Orbit",imageUrl:"https://sessionize.com/image/b238-400o400o2-3XR9A4sGhZApiZ3xKKfav7.jpg",mdxType:"Speaker"}),(0,a.kt)(r.Z,{name:"Chris Oliver",position:"Owner of GoRails",imageUrl:"https://sessionize.com/image/5bb3-400o400o2-BagGwXKP82tmypy9at4AkN.jpeg",mdxType:"Speaker"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://railsconf2023.sessionize.com/session/453439"},"Schedule Entry")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/colinloretz/railsconf-webhooks/blob/main/slides/railsconf.pdf"},"Slides")),(0,a.kt)("h2",{id:"attendees"},"Attendees"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Jeremy")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Relevancy"),(0,a.kt)("th",{parentName:"tr",align:null},"Interesting"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"5")))),(0,a.kt)("p",null,"Was relevant but very basic."),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("h3",{id:"why-webhooks"},"Why Webhooks?"),(0,a.kt)("p",null,"Any service that wants to publish data to you rather than you reaching out."),(0,a.kt)("h3",{id:"github-repo"},"GitHub Repo"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/colinloretz/railsconf-webhooks"},"https://github.com/colinloretz/railsconf-webhooks")),(0,a.kt)("p",null,"Receive a POST request."),(0,a.kt)("p",null,"CSRF tokens need to be ignored for inbound requests and use a different method to authenticate."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Return to the provider as soon as possible. Use background jobs or something since they will continue to send until they get a good response.")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://webhooks.fyi/"},"Webhooks.fyi")),(0,a.kt)("p",null,"Github sends pings. May want to add a before action to check that."),(0,a.kt)("p",null,"Look at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rails/rails/blob/main/actionmailbox/app/models/action_mailbox"},"rails/actionmailbox/app/models/action_mailbox at main \xb7 rails/rails \xb7 GitHub")),(0,a.kt)("h3",{id:"security"},"Security"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Verification methods",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"TLS, Oath, Asymetric keys, HMAC"))),(0,a.kt)("li",{parentName:"ul"},"Replay Attacks"),(0,a.kt)("li",{parentName:"ul"},"Dataless notifications")),(0,a.kt)("p",null,"The talk was very introductory as to how to process webhooks and structure your endpoints.\nTwo main takeaways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Look at how Rails does this for ActionMailBox and emulate that pattern (structure and strategy)"),(0,a.kt)("li",{parentName:"ul"},"Capture the data in something like InboundWebhooks model and create background jobs to process them later (This is effectively Rails pattern). This means you can respond quickly to the hook and move potential bottlenecks from your controllers to your database.")))}d.isMDXComponent=!0}}]);