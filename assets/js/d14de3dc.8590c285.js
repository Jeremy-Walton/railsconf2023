"use strict";(self.webpackChunkrailsconf_2023=self.webpackChunkrailsconf_2023||[]).push([[263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5408:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294);const r={card:"card_vceO",image:"image_EDOu",description:"description_Vdg7",position:"position_CmtU"};function i(e){let{imageUrl:t,name:n,position:i}=e;return a.createElement("div",{className:r.card},a.createElement("img",{src:t,className:r.image}),a.createElement("div",{className:r.description},a.createElement("p",null,n),a.createElement("p",{className:r.position},i)))}},609:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),i=n(5408);const o={sidebar_position:4},l="Using Rails Engines to Supercharge Your Team",s={unversionedId:"day-three/engines",id:"day-three/engines",title:"Using Rails Engines to Supercharge Your Team",description:"Rails engines are self-contained modules that can be used inside of a larger Ruby on Rails application to encapsulate complex functionality and expose it with a tight, well defined API.",source:"@site/docs/day-three/engines.mdx",sourceDirName:"day-three",slug:"/day-three/engines",permalink:"/railsconf2023/docs/day-three/engines",draft:!1,editUrl:"https://github.com/Jeremy-Walton/railsconf2023/tree/main/packages/create-docusaurus/templates/shared/docs/day-three/engines.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Gradually Modularizing your Monolith with Ruby Packs and Packwerk",permalink:"/railsconf2023/docs/day-three/modular"},next:{title:"Terms of Deployment: The Process of Evaluating Hatchbox, Fly, and Render for Developers",permalink:"/railsconf2023/docs/day-three/deployment"}},p={},c=[{value:"Attendees",id:"attendees",level:2},{value:"Notes",id:"notes",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-rails-engines-to-supercharge-your-team"},"Using Rails Engines to Supercharge Your Team"),(0,r.kt)("p",null,"Rails engines are self-contained modules that can be used inside of a larger Ruby on Rails application to encapsulate complex functionality and expose it with a tight, well defined API."),(0,r.kt)(i.Z,{name:"Austin Story",position:"Director, Infra Product Platform, Doximity",imageUrl:"https://sessionize.com/image/01be-400o400o2-UZsC7x13PGcwbyRmrSKrCQ.png",mdxType:"Speaker"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://railsconf2023.sessionize.com/session/450255"},"Schedule Entry")),(0,r.kt)("h2",{id:"attendees"},"Attendees"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Reed")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Relevancy"),(0,r.kt)("th",{parentName:"tr",align:null},"Interesting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"6")))),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("p",null,"Story of how Doximity used Rails engines to deploy a sophisticated application."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gem is shared Ruby code"),(0,r.kt)("li",{parentName:"ul"},"Engine integrates with Rails"),(0,r.kt)("li",{parentName:"ul"},"GraphQL is a way to describe data, includes documentation, typed responses, safer changes, unified"),(0,r.kt)("li",{parentName:"ul"},"Backend perspective \u2013 no internal standard, isolation harder, developer experience was atrocious"),(0,r.kt)("li",{parentName:"ul"},"GraphQL Federation (app name) was the answer"),(0,r.kt)("li",{parentName:"ul"},"Restored internal standards to backend, isolation, and improved developer experience"),(0,r.kt)("li",{parentName:"ul"},"Started with Rails Guides documentation"),(0,r.kt)("li",{parentName:"ul"},"Plan approach \u2013 setup engine, create GraphQL playground"),(0,r.kt)("li",{parentName:"ul"},"Engine is a  mountable plugin"),(0,r.kt)("li",{parentName:"ul"},"Focus heavily on dummy application provided as part of test harness"),(0,r.kt)("li",{parentName:"ul"},"Make sure dummy app exposes every feature of engine so we don\u2019t have to deploy engine to test changes"),(0,r.kt)("li",{parentName:"ul"},"Mount controller action in engine\u2019s internal routes"),(0,r.kt)("li",{parentName:"ul"},"Inherit controller from ActionController::Base so that Application doesn\u2019t impact engine"),(0,r.kt)("li",{parentName:"ul"},"Includes Authentication by default because it\u2019s not optional"),(0,r.kt)("li",{parentName:"ul"},"Includes generators to make installing Engine easier"),(0,r.kt)("li",{parentName:"ul"},"Includes RSpec helper"),(0,r.kt)("li",{parentName:"ul"},"Includes ActiveSupport instrumentation"),(0,r.kt)("li",{parentName:"ul"},"Integrated with CI to monitor schema changes"),(0,r.kt)("li",{parentName:"ul"},"Includes Rake tasks"),(0,r.kt)("li",{parentName:"ul"},"Uses Railties to provide Rake tasks and update Playground")))}m.isMDXComponent=!0}}]);